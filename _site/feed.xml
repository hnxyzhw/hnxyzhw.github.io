<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Allen Woody</title>
    <description>嗨，我是朱洪伍 (@hnxyzhw)，一名来自中国的 iOS 开发者。现居北京，就职于小灵通电子支付有限公司。正在get新技能，探求创意之源。</description>
    <link>https://hnxyzhw.github.io/</link>
    <atom:link href="https://hnxyzhw.github.io/feed.xml" rel="self" type="application/rss+xml"/>
<<<<<<< HEAD
    <pubDate>Wed, 22 Mar 2017 19:18:13 +0800</pubDate>
    <lastBuildDate>Wed, 22 Mar 2017 19:18:13 +0800</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>iOS审核问题汇总</title>
        <description>&lt;h3 id=&quot;ios&quot;&gt;本文汇总了一些iOS上线审核时所遇到的问题，并总结相关问题的解决办法！&lt;/h3&gt;

&lt;h4 id=&quot;star&quot;&gt;&lt;em&gt;《未完，待续！请点击Star持续关注最新动态！》&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/hnxyzhw/AppStoreReviewsAndRejected&quot;&gt;Github地址：iOS审核问题汇总&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;h0-idh0&quot;&gt;&lt;h0 id=&quot;目录&quot;&gt;目录：&lt;/h0&gt;&lt;/h4&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;#PLA-1.2&quot;&gt;1. PLA-1.2审核案例&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;#Safety-1.2&quot;&gt;2. Safety-1.2审核案例&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;#Performance-2.1&quot;&gt;3.Performance-2.1审核案例&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;#2.3&quot;&gt;4. 2.3审核案例&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;#Performance-2.3.1&quot;&gt;5. Performance-2.3.1审核案例&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;#2.3.10&quot;&gt;6. 2.3.10审核案例&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;#PLA-3.3.12&quot;&gt;7. PLA-3.3.12审核案例&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;#PLA-3.3.2&quot;&gt;8. PLA-3.3.2热更新审核案例&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;#Legal-5.2.3&quot;&gt;9. Legal-5.2.3审核案例&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;#Legal-5.3.3&quot;&gt;10. Legal-5.3.3审核案例&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;#22.2&quot;&gt;11. 22.2审核案例&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;section&quot;&gt;正文：&lt;/h4&gt;

&lt;h5 id=&quot;span-idpla-121-pla-12span&quot;&gt;&lt;span id=&quot;PLA-1.2&quot;&gt;1: PLA-1.2审核案例&lt;/span&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;(&lt;a href=&quot;#目录&quot;&gt;目录&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;原因：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;用个人账户上传金融类应用。&lt;/p&gt;

&lt;p&gt;理财、P2P等金融类相关产品的开发者们：目前，金融类应用只能用对应公司名称的开发者账号上传了。也就是说，如果用个人开发者账号提交金融类应用，会收到苹果的审核未过信息。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;附被拒理由原文:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PLA1.2
The Seller and Artist names associated with your app do not reflect the name, &quot;xxx有限责任公司,&quot; in the app or its name and metadata, as required by Section 1.2 of the Apple Developer Program License Agreement.（您的应用开发商名称和应用内/应用名称/关键词/描述中的名字（XXX有限责任公司）不匹配，违反了苹果开发者计划许可协议2.1。）
Next Steps
Your app must be published under a Seller name and Artist name that reflects the xxx有限责任公司 brand, If you have developed these apps on behalf of a client, please advise your client to add you to their development team of their developer account.（您的应用必须以符合XXX有限责任公司品牌名称的开发者账号上传。如果您是帮助客户开发的应用，请通知您的客户将您添加到他们的开发者账号团队成员中。）
您的应用必须以符合XXX有限责任公司品牌名称的开发者账号上传。如果您是帮助客户开发的应用，请通知您的客户将您添加到他们的开发者账号团队成员中。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;span-idsafety-122-safety-12span&quot;&gt;&lt;span id=&quot;Safety-1.2&quot;&gt;2: Safety-1.2审核案例&lt;/span&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;(&lt;a href=&quot;#目录&quot;&gt;目录&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;原因：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;含UGC却未提供用户协议及举报功能。&lt;/p&gt;

&lt;p&gt;如果应用内有发帖等UGC（用户产生内容）功能，但是却没有要求用户同意条款（EULA），也没有对敏感信息的举报措施等，也可能被拒。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;附被拒理由原文:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Safety - 1.2
Your app enables the display of user-generated content but does not have the required precautions in place.
Next Steps
Please revise your app to implement all of the following precautions:
- Require that users agree to terms (EULA) and these terms must make it clear that there is no tolerance for objectionable content.
- A method for filtering objectionable content.
- A mechanism for users to flag objectionable content.
- The ability to block abusive users from the service.
- The developer must act on objectionable content reports within 24 hours by removing the content and ejecting the user who provided the offending content.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;span-idperformance-213-performance-21span&quot;&gt;&lt;span id=&quot;Performance-2.1&quot;&gt;3: Performance-2.1审核案例&lt;/span&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;(&lt;a href=&quot;#目录&quot;&gt;目录&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;原因：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;应用出现崩溃、加载失败等非常明显的Bug。&lt;/p&gt;

&lt;p&gt;2.1中明确指明：Make sure your app has been tested on-device for bugs and stability before you submit it……Please don’t treat App Review as a software testing service. We will reject incomplete app bundles and binaries that crash or exhibit obvious technical problems.（请确保你的应用在提交审核之前经过充分测试并且没有Bug……不要把应用程序审核当作软件测试服务，如果你的应用不完整或者存在明显的技术缺陷，它将直接被拒绝。）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;附被拒理由原文:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Performance - 2.1
We discovered one or more bugs in your app when reviewed on Wi-Fi.
Specifically, when we attempt to log-in, an activity indicator would spin briefly, then dismisses itself with no further action taken by the app.
The user remains on the log-in screen, and is unable to use your app.
We've attached screenshot(s) for your reference.
Next Steps
Please run your app on a device to identify the issue(s), then revise and resubmit your app for review.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;span-id234-23span&quot;&gt;&lt;span id=&quot;2.3&quot;&gt;4: 2.3审核案例&lt;/span&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;(&lt;a href=&quot;#目录&quot;&gt;目录&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;原因：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;应用描述、截图等与应用功能严重不符。&lt;/p&gt;

&lt;p&gt;如果应用描述、截图和预览视频等营销/宣传性资料中介绍的功能与应用的实际功能大相径庭，或者苹果审核人员并没有在应用中发现应用描述或截图中展示的功能，都有可能被拒。
除此之外，截图太过艺术化，完全不符合应用的实际内容，或选择的分类和应用性质完全不符等等都有可能被拒。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;附被拒理由原文:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2.3 Details
We were unable to locate some of the features described in your marketing materials or app name.
Specifically, we are unable to locate 'xxx ' features that marketed in the app name.
Next Steps
If these features are located in your app, please reply to this message in the Resolution Center to provide information on how to locate them.
Alternatively, please revise your app to ensure that these features are fully implemented or revise your application description, release notes and screenshots to remove this content.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;span-idperformance-2315-performance-231span&quot;&gt;&lt;span id=&quot;Performance-2.3.1&quot;&gt;5: Performance-2.3.1审核案例&lt;/span&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;(&lt;a href=&quot;#目录&quot;&gt;目录&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;原因：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;包含隐藏功能。&lt;/p&gt;

&lt;p&gt;不要在应用中包含任何隐藏以及没有相关说明文档的功能。如果应用的功能不能让审核人员了解清楚，很可能被拒。且苹果在审核规则中还有这样一条规定：如果这样的行为过分或者反复出现，你可能会被从开发者身份当中除名。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;附被拒理由原文:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Performance - 2.3.1
We noticed that your app contains hidden features.
Specifically, your app contains a hidden music downloader.
Next Steps
Please remove these features from your app.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;span-id23106-2310span&quot;&gt;&lt;span id=&quot;2.3.10&quot;&gt;6: 2.3.10审核案例&lt;/span&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;(&lt;a href=&quot;#目录&quot;&gt;目录&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;原因：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;出现第三方移动平台的名字、图标等。&lt;/p&gt;

&lt;p&gt;苹果应用商店审核指南2.3.10规定：Make sure your app is focused on the iOS, Mac, Apple TV or Apple Watch experience, and don’t include names, icons, or imagery of other mobile platforms in your app or metadata, unless there is specific, approved interactive functionality.（确保你的应用专注于iOS、Mac、Apple TV or Apple Watch,在应用或者元数据中不包含其他平台的名称、图标、图像，除非有特定的、被认可的互动功能。）
也就是说，最好不要在苹果的应用商店出现和Android等平台有有关的信息，否则被拒的风险大大的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;附被拒理由原文:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2.3.10
DetailsWe found that your app and/or its metadata contains inappropriate or irrelevant platform information, which is not in compliance with the App Store Review Guidelines.
Specifically, your app mentioned other platforms, such as Android.
Next Steps
Providing future platform compatibility plans, or other general platform references, is not appropriate in the context of the App Store. It would be appropriate to remove this information.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;span-idpla-33127-pla-3312span&quot;&gt;&lt;span id=&quot;PLA-3.3.12&quot;&gt;7: PLA-3.3.12审核案例&lt;/span&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;(&lt;a href=&quot;#目录&quot;&gt;目录&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;原因：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;采集了IDFA却未集成广告服务。&lt;/p&gt;

&lt;p&gt;IDFA (identifier for advertising)能够较精准地识别用户，尤其对广告主追踪广告转化率帮助很大。苹果开发者计划许可协议中规定：只有使用广告服务才有权采集IDFA。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;附被拒理由原文:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PLA 3.3.12
We found that your app uses the Advertising Identifier but does not include ad functionality. This does not comply with the terms of the Apple Developer Program License Agreement, as required by the App Store Review Guidelines.
Specifically, section 3.3.12 of the Apple Developer Program License Agreement states:
&quot;You and Your Applications (and any third party with whom you have contracted to serve advertising) may use the Advertising Identifier, and any information obtained through the use of the Advertising Identifier, only for the purpose of serving advertising. If a user resets the Advertising Identifier, then You agree not to combine,correlate, link or otherwise associate, either directly or indirectly, the prior Advertising Identifier and any derived information with the reset Advertising Identifier.&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;span-idpla-3328-pla-332span&quot;&gt;&lt;span id=&quot;PLA-3.3.2&quot;&gt;8: PLA-3.3.2热更新审核案例&lt;/span&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;(&lt;a href=&quot;#目录&quot;&gt;目录&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;原因：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;近期不少开发者APP中集成或SDK中包含了热更新功能,受到苹果警告。&lt;/p&gt;

&lt;p&gt;目前已知的有高德地图、个推、BugTags、Bugly含有热更新功能。
如果你的应用里集成的有这些第三方的sdk，请移步到其相关的官网，查看是有最新的sdk，如果有那么请替换掉最新的sdk。或者咨询其相关的技术支持人员，或者在其论坛发帖询问解决办法。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;附被拒理由原文:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Your app, extension, and/or linked framework appears to contain code designed explicitly with the capability to change your app’s behavior or functionality after App Review approval, which is not in compliance with section 3.3.2 of the Apple Developer Program License Agreement and App Store Review Guideline 2.5.2. This code, combined with a remote resource, can facilitate significant changes to your app’s behavior compared to when it was initially reviewed for the App Store. While you may not be using this functionality currently, it has the potential to load private frameworks, private methods, and enable future feature changes. 
This includes any code which passes arbitrary parameters to dynamic methods such as dlopen(), dlsym(), respondsToSelector:, performSelector:, method_exchangeImplementations(), and running remote scripts in order to change app behavior or call SPI, based on the contents of the downloaded script. Even if the remote resource is not intentionally malicious, it could easily be hijacked via a Man In The Middle (MiTM) attack, which can pose a serious security vulnerability to users of your app.
Please perform an in-depth review of your app and remove any code, frameworks, or SDKs that fall in line with the functionality described above before submitting the next update for your app for review.
Best regards
App store Review
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;span-idlegal-5239-legal-523span&quot;&gt;&lt;span id=&quot;Legal-5.2.3&quot;&gt;9: Legal-5.2.3审核案例&lt;/span&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;(&lt;a href=&quot;#目录&quot;&gt;目录&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;原因：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;App Store审核条款里明确规定：&lt;/p&gt;

&lt;p&gt;①不要使用受保护的第三方内容，如商标、版权作品，或者在应用中使用未经专利许可的创意。&lt;/p&gt;

&lt;p&gt;②如果你的应用使用、访问、展示和商业化第三方的服务，请保证你已经获得了相应的授权许可，且必须根据要求在审核前一并提供许可文件。&lt;/p&gt;

&lt;p&gt;③应用程序不能对非法分享、保存、转换或者来自第三方源的数据的非法使用提供方便，除非具有相应的合法授权协议。&lt;/p&gt;

&lt;p&gt;除此之外，苹果也出台了一系列保护自身知识产权的条款，例如：&lt;/p&gt;

&lt;p&gt;①不要明示或暗示苹果公司是你的应用的供应商，或者苹果为你的应用的功能和质量代言。&lt;/p&gt;

&lt;p&gt;②禁止创建一个与苹果已有产品、用户界面、应用、广告主题相似的应用，且不允许拼错苹果产品名称。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;附被拒理由原文:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Legal - 5.2.3
Your app also allows users to either save or download music and/or video content without authorization from the relevant third-party sources.
Next Steps
Please provide documentary evidence of your rights to allow music or video content download from their sources. If you do not have the requested permissions, please remove the music or video download functionality from your app.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;span-idlegal-53310-legal-533span&quot;&gt;&lt;span id=&quot;Legal-5.3.3&quot;&gt;10: Legal-5.3.3审核案例&lt;/span&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;(&lt;a href=&quot;#目录&quot;&gt;目录&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;原因：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;错误使用抽奖、竞猜等促销方式。&lt;/p&gt;

&lt;p&gt;抽奖、彩票、竞猜等功能可能是应用使用最普遍的促销方式之一了，而苹果对这些也做出了规定。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;p&gt;①用于抽奖和竞猜的官方规则必须在应用当中予以提供，并且明确表明苹果公司不是赞助商或者以任何形式参与了该活动；&lt;/p&gt;

&lt;p&gt;②应用不允许使用应用内付费购买信用点或者虚拟货币，并把它们与实际的货币结合使用，也不允许在应用当中购买彩票、抽奖券，和进行资金转移……如果你没有完全明白苹果对这方面的审核条款，很可能被拒！&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;附被拒理由原文:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Legal - 5.3.3
Your app enables users to purchase a raffle ticket, top-up their accounts or initiate fund transfers in the app, which does not comply with the App Store Review Guidelines.
Next Steps
While raffle tickets cannot be purchased within the app, you may provide a link that launches your web site, in Safari, and enables ticket purchase.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;span-id22211-222span&quot;&gt;&lt;span id=&quot;22.2&quot;&gt;11: 22.2审核案例&lt;/span&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;(&lt;a href=&quot;#目录&quot;&gt;目录&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;原因：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;包含虚假、误导用户的信息或功能
如果名称、描述等应用信息或功能中包含虚假、山寨的成分，被苹果认定为：有误导用户的嫌疑，审核时就会被拒绝。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;附被拒理由原文:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;22.2 Details
Your app or its metadata contains misleading content. Specifically, your app name, xxx, misleads users that the app includes ability to earn cash.
Next Steps
Please remove or revise any misleading content in your app and its metadata.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;star-1&quot;&gt;&lt;em&gt;《未完，待续！请点击Star持续关注最新动态！》&lt;/em&gt;&lt;/h4&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/hnxyzhw/AppStoreReviewsAndRejected&quot;&gt;Github地址：iOS审核问题汇总&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Wed, 22 Mar 2017 14:50:00 +0800</pubDate>
        <link>https://hnxyzhw.github.io/2017/03/iOS%E5%AE%A1%E6%A0%B8%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</link>
        <guid isPermaLink="true">https://hnxyzhw.github.io/2017/03/iOS%E5%AE%A1%E6%A0%B8%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</guid>
        
        <category>iOS,AppleStore</category>
=======
    <pubDate>Fri, 24 Feb 2017 17:31:05 +0800</pubDate>
    <lastBuildDate>Fri, 24 Feb 2017 17:31:05 +0800</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Mac本地推流直播服务器(nginx、rtmp服务器+ffmpeg推流)</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;文章简书地址：&lt;a href=&quot;http://www.jianshu.com/p/5bd4c8791228&quot;&gt;Mac本地推流直播服务器(nginx、rtmp服务器+ffmpeg推流)&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;  在2016过去的一年里移动端直播的火爆程度，不亚于求年楼盘的疯涨。作为一个合格的开发者，也要跟进时代的潮流。下面介绍一下基于Mac os系统搭建一个本地的直播服务器。主要是基于nginx+rtmp环境搭建的。
  nginx、rtmp是在Mac上的终端安装Homebrow后，执行命令行来安装的。(提示安装最好开vpn翻墙，不然会很慢甚至有可能会安装失败)&lt;/p&gt;

&lt;h4 id=&quot;homebrow&quot;&gt;终端安装Homebrow&lt;/h4&gt;
&lt;h5 id=&quot;section&quot;&gt;安装命令行:&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h5 id=&quot;section-1&quot;&gt;卸载命令行:&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;相关操作截图:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-e884339d93c6ccab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20170222_1.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;brewnginx&quot;&gt;brew安装nginx&lt;/h4&gt;
&lt;h5 id=&quot;clone-nginx&quot;&gt;clone nginx项目到本地的命令行:&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew tap homebrew/nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;相关操作截图:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-1ae03a58b5608840.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20170222_3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;#####下载成功后，执行安装命令行(注意执行是输入命令是nginx-full，中间不能有空格):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install nginx-full --with-rtmp-module
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;这个过程会比较长，请耐心等待&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;相关操作截图:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-57faf6c904af6e2a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20170222_4.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-9962d4e88f272d9c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20170222_5.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-fee20020e61f5e69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20170222_6.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;可能会出现一些文件操作权限的问题的解决办法&lt;/h4&gt;
&lt;p&gt;打开finder，复制对应的路径，找到对应的文件夹或者文件，右键显示简介。修改共享与权限一栏中，用户对该文件夹或者文件的权限为读与写。修改完后可以在执行命令:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew link nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;如果仍然又问题，可以执行诊断的命令,对相应的错误进行排查:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew doctor
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;相关操作截图:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-ef727b306b31ea64.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20170222_9.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;按照以上的操作后nginx、rtmp已经在Mac上安装完成了，但是还需要配置nginx、rtmp。&lt;/p&gt;

&lt;h4 id=&quot;nginxrtmp&quot;&gt;配置nginx、rtmp&lt;/h4&gt;
&lt;p&gt;终端打印出nginx的相关信息：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew info nginx-full
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;可以看到到nginx的安装位置(1.10.3是安装后的nginx的版本号，可以通过nginx -v命令查看)：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/Cellar/nginx-full/1.10.3/bin/nginx&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;nginx配置文件的位置：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/etc/nginx/nginx.conf&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;nginx&quot;&gt;nginx服务操作&lt;/h5&gt;
&lt;p&gt;服务启动：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nginx
或者
sudo nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;其他操作：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nginx -s 重新加载配置|重启|停止|退出
nginx -s reload|reopen|stop|quit

nginx -V 查看版本，以及配置文件地址
nginx -v 查看版本
nginx -c filename 指定配置文件
nginx -h 帮助
nginx -t 测试配置是否有语法错误
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;nginx启动后，在浏览器里输入下面的地址：&lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt;或者&lt;a href=&quot;http://127.0.0.1:8080/&quot;&gt;http://127.0.0.1:8080/&lt;/a&gt;
会在浏览器上出现一下提示，表示安装成功：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Welcome to nginx!

If you see this page, the nginx web server is successfully installed and working. Further configuration is required.

For online documentation and support please refer to nginx.org.
Commercial support is available at nginx.com.

Thank you for using nginx.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h5 id=&quot;nginx-1&quot;&gt;如果说端口号8080被占用了,那么你可以执行下面操作来解决nginx服务的启动：&lt;/h5&gt;
&lt;p&gt;查看被占用8080的PID&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lsof -i tcp:8080
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;根据输出的PID，kill掉9934&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kill 9934
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;然后再重新执行nginx，打开之前的链接地址，查看是否启动成功。&lt;/p&gt;

&lt;h5 id=&quot;section-3&quot;&gt;修改配置文件&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew info nginx-full
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;找到配置文件的路径：&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/etc/nginx/nginx.conf&lt;/code&gt;
在finder中打开后，找到对应的nginx.conf文件，使用Mac自带的文本编辑打开。然后在文件的最下面也就是{}的外边，添加上rtmp的配置并保存,如下所示:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rtmp {
   server {
        #监听的端口号,rtmp协议的默认端口号是1935
        listen 1935;
        #直播流配置,访问路径是rtmplive
        application rtmplive {
              #开启实时
              live on;
              #为rtmp引擎设置最大连接数.默认为off
              max_connections 1024;
              #不记录数据
             record off;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后重启nginx，使配置文件生效:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nginx -s reload 或者 sudo nginx -s reload
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;如果说你无法重新启动nginx，可能会出现下面的错误(或者说其他的错误)：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;“/usr/local/var/run/nginx.pid”failed
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可以通过下面的操作来解决:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nginx -c /usr/local/etc/nginx/nginx.conf
nginx -s reload
或者
sudo nginx -c /usr/local/etc/nginx/nginx.conf
sudo nginx -s reload
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;vlcrtmp&quot;&gt;VLC支持rtmp协议的播放器的安装&lt;/h4&gt;
&lt;p&gt;在测试推流前，我们需要在Mac上安装一个支持rtmp协议的播放器，那就是鼎鼎大名的VLC。&lt;a href=&quot;www.videolan.org/vlc/download-macosx.html&quot;&gt;VLC Mac版官网,需要vpn翻墙&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;ffmepg&quot;&gt;安装ffmepg工具，进行推流&lt;/h4&gt;
&lt;p&gt;ffmpeg安装命令:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install ffmpeg
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;也可以用brew info ffmpeg指令进行查看Mac是否安装有ffmpeg:
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-90e92f744560031c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20170224_2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在终端上看到Options有下面的输出，可以看到默认是没有安装rtmpdump的(后边有个小红叉):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--with-rtmpdump
	Enable RTMP protocol
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;那么可以执行下面的命令行进行安装(经测试发现好像只安装ffmpeg,也是可以进行推流的，所以也可以省略这一步)：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew reinstall ffmpeg --with-rtmpdump
或者
sudo brew reinstall ffmpeg --with-rtmpdump
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h5 id=&quot;ffmpeg&quot;&gt;ffmpeg简单操作&lt;/h5&gt;
&lt;p&gt;转换视频格式命令行:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ffmpeg -i CirlProgress.mov circle.mp4
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;ffmpeg推流是以flv格式传输的，所以在推流是可能要注意你的视频格式，还又就是要注意视频的码率等问题。具体问题可以自行百度google解决。
推流命令行:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
ffmpeg -re -i circle.mp4 -vcodec copy -f flv rtmp://localhost:1935/rtmplive/room
&lt;/code&gt;
 参考:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
 ffmpeg -re -i 你的视频文件的绝对路径 -vcodec copy -f flv rtmp://localhost:1935/rtmplive/room
&lt;/code&gt;
相关操作截图:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-eb1d93fb0fb1863b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20170222_14.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;视频推流到本地的服务上后，可以打开VLC，在File-&amp;gt;open network-&amp;gt;选项中输入：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rtmp://localhost:1935/rtmplive/room
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;注意，在使用ffmpeg推流时可能会出现一下的错误提示:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Connection to tcp://localhost:1935 failed (Connection refused), trying next address 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;出现这个问题，因为配置了nginx.conf后，没有需要重启的原因。
执行下面的命令:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nginx -s reload
或者
nginx -s reload
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;如果输入命令行后仍然有错误，那么试着关闭nginx的服务，以及8080的的相关进程，重启终端等其他方式重新操作一次。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;相关操作截图:
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-7c848e12c08f9ca7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20170224_4.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;参考博客：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/dracotianlong/article/details/21817097&quot;&gt;mac 安装 nginx 环境以及nginx常用命令&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/zh952016281/article/details/52683552&quot;&gt;ffmpeg常用命令&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 24 Feb 2017 16:20:00 +0800</pubDate>
        <link>https://hnxyzhw.github.io/2017/02/Mac%E6%9C%AC%E5%9C%B0%E6%8E%A8%E6%B5%81%E7%9B%B4%E6%92%AD%E6%9C%8D%E5%8A%A1%E5%99%A8(nginx-rtmp%E6%9C%8D%E5%8A%A1%E5%99%A8+ffmpeg%E6%8E%A8%E6%B5%81)/</link>
        <guid isPermaLink="true">https://hnxyzhw.github.io/2017/02/Mac%E6%9C%AC%E5%9C%B0%E6%8E%A8%E6%B5%81%E7%9B%B4%E6%92%AD%E6%9C%8D%E5%8A%A1%E5%99%A8(nginx-rtmp%E6%9C%8D%E5%8A%A1%E5%99%A8+ffmpeg%E6%8E%A8%E6%B5%81)/</guid>
        
        <category>iOS,推流直播</category>
>>>>>>> origin/master
        
        
      </item>
    
      <item>
        <title>app审核中遇到的问题03（涉及到金融类的需要用企业级别的账号申请上架）</title>
        <description>&lt;p&gt;2017年2月17日 上午2:54
发件人 Apple
	•	2. 3 PERFORMANCE: ACCURATE METADATA 
	•	0. 10.0 BEFORE YOU SUBMIT: PROGRAM LICENSE AGREEMENT&lt;/p&gt;

&lt;p&gt;Performance - 2.3.7&lt;/p&gt;

&lt;p&gt;Your app name to be displayed on the App Store includes keywords or descriptors, which are not appropriate for use in an app name.&lt;/p&gt;

&lt;p&gt;Specifically, the following words in your app name are considered keywords or descriptors:&lt;/p&gt;

&lt;p&gt;贷款、借款、网银管理、顾问&lt;/p&gt;

&lt;p&gt;Next Steps&lt;/p&gt;

&lt;p&gt;Please revise your app name to remove any keywords and descriptors from all localizations of your app. Keywords can be entered in the Keywords field in iTunes Connect to be used as search terms for your app.&lt;/p&gt;

&lt;p&gt;Please also remember to re-evaluate your app name title to ensure it’s 50 characters or less.&lt;/p&gt;

&lt;p&gt;Resources&lt;/p&gt;

&lt;p&gt;For information on how to revise your app name, please see &lt;a href=&quot;http://help.apple.com/xcode/mac/8.2/#/dev3db3afe4f&quot;&gt;Renaming a Project or App&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For information on changing the app name and other metadata in iTunes Connect, please see the section “Viewing and Changing Your App’s Metadata” in the &lt;a href=&quot;https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/About.html&quot;&gt;iTunes Connect Developer Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;PLA 1.2&lt;/p&gt;

&lt;p&gt;The Seller and Artist names associated with your app do not reflect the name of the financial institution(s) or loan provider(s) in the app or its metadata, as required by section 1.2 of the Apple Developer Program License Agreement. Next Steps Your app must be published under a Seller name and Artist name that reflects the financial institution(s) or loan provider(s)  brand. If you have developed these apps on behalf of a client, please advise your client to add you to the development team of their Apple Developer account. The Artist name is the Company name in iTunes Connect. For information on how to address this issue, please contact iTunes Connect Contact Us.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://a1618.phobos.apple.com/us/r30/Purple122/v4/dc/47/f6/dc47f682-00aa-ffab-0704-a96e5f502d4b/attachment-9184204356495002063Screenshot-0216-105342.png?downloadKey3=1487497979_3be2cc0863c88f61c5474dca0321a00f&quot;&gt;Screenshot-0216-105342.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://a1078.phobos.apple.com/us/r30/Purple111/v4/7f/ee/fe/7feefe09-beae-c63f-94d4-fd0761f860e9/attachment-4518752275153205965Screenshot-0216-105204.png?downloadKey3=1487497979_d6c48e5627a5cecaaceb7086b2b30da9&quot;&gt;Screenshot-0216-105204.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://a1664.phobos.apple.com/us/r30/Purple111/v4/b3/4e/eb/b34eeb4a-a328-3419-470e-714ee4ccff95/attachment-463550308834771403Screenshot-0216-105314.png?downloadKey3=1487497979_daaef5524cb609e8e7c677ffce2a06fc&quot;&gt;Screenshot-0216-105314.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://a858.phobos.apple.com/us/r30/Purple122/v4/d7/7d/a8/d77da821-018b-f6c0-2d15-949ea0f9a487/attachment-930135373867405000Screenshot-0216-105322.png?downloadKey3=1487497979_c7af3fe3f3109959b366dea8b120e9b0&quot;&gt;Screenshot-0216-105322.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://a1.phobos.apple.com/us/r30/Purple111/v4/b7/fd/58/b7fd5806-3ef0-1fc0-a3e0-66d17256efb6/attachment-3598297107114342811Screenshot-0216-105337.png?downloadKey3=1487497979_0577e0c8103248c11880e6bdb1f0ccb7&quot;&gt;Screenshot-0216-105337.png &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;//百度翻译&lt;/p&gt;

&lt;p&gt;Performance - 2.3.7&lt;/p&gt;

&lt;p&gt;应用程序商店上要显示的应用程序名称包括关键字或描述符，不适合在应用程序名称中使用。&lt;/p&gt;

&lt;p&gt;具体来说，在你的应用程序名称下面的单词被认为是关键字或描述符：&lt;/p&gt;

&lt;p&gt;贷款、借款、网银管理、顾问&lt;/p&gt;

&lt;p&gt;接下来的步骤&lt;/p&gt;

&lt;p&gt;请修改您的应用程序的名称从所有局限你的应用程序中删除任何关键词和描述。关键词可输入关键字字段在iTunes Connect作为你的应用程序的搜索条件。&lt;/p&gt;

&lt;p&gt;请记住重新评估您的应用程序名称的标题，以确保它的50个字符或更少。&lt;/p&gt;

&lt;p&gt;资源&lt;/p&gt;

&lt;p&gt;有关如何修改您的应用程序的名称，请参阅重命名项目或应用程序。&lt;/p&gt;

&lt;p&gt;为改变在iTunes应用程序名称和其他元数据连接的信息，请参见“查看和更改您的应用程序的元数据在iTunes Connect开发者指南。&lt;/p&gt;

&lt;p&gt;PLA 1.2&lt;/p&gt;

&lt;p&gt;与您的应用程序相关联的卖方和艺术家名称不反映在应用程序或其元数据的金融机构或贷款提供商的名称，如由苹果开发者计划许可协议第1.2节所要求的。下一步您的应用程序必须在卖方名称和艺术家的名字，反映了金融机构（或）贷款提供商。如果您已经开发了这些应用程序代表一个客户，请告知您的客户添加您的开发团队，他们的苹果开发者帐户。艺术家的名字是公司的名字在iTunes Connect。关于如何解决这个问题，请联系iTunes Connect联系我们。&lt;/p&gt;

&lt;p&gt;个人理解：
第一个问题是关键字的问题，app的名字后边不能追加太多关键字跟描述。删除掉对应的关键字就可以了。
第二个问题是说app属于金融类的应用，app里面没有反应出开发者的名字和贷款公司名字有关联或者关系。
并且金融类的应用，只能使用公司账号发布。&lt;/p&gt;

</description>
        <pubDate>Fri, 17 Feb 2017 13:56:00 +0800</pubDate>
        <link>https://hnxyzhw.github.io/2017/02/app%E5%AE%A1%E6%A0%B8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%9803(%E6%B6%89%E5%8F%8A%E5%88%B0%E9%87%91%E8%9E%8D%E7%B1%BB%E7%9A%84%E9%9C%80%E8%A6%81%E7%94%A8%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%88%AB%E7%9A%84%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7%E4%B8%8A%E6%9E%B6)/</link>
        <guid isPermaLink="true">https://hnxyzhw.github.io/2017/02/app%E5%AE%A1%E6%A0%B8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%9803(%E6%B6%89%E5%8F%8A%E5%88%B0%E9%87%91%E8%9E%8D%E7%B1%BB%E7%9A%84%E9%9C%80%E8%A6%81%E7%94%A8%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%88%AB%E7%9A%84%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7%E4%B8%8A%E6%9E%B6)/</guid>
        
        <category>iOS,AppleStore</category>
        
        
      </item>
    
      <item>
        <title>适配iOS状态栏颜色</title>
        <description>&lt;p&gt;Xcode 升级后，旧的状态栏的样式设置方式会引起警告错误：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Error&amp;gt;: CGContextSaveGState: invalid context 0x0. If you want to see the backtrace, please set CG_CONTEXT_SHOW_BACKTRACE environmental variable
&amp;lt;Error&amp;gt;: CGContextRestoreGState: invalid context 0x0. If you want to see the backtrace, please set CG_CONTEXT_SHOW_BACKTRACE environmental variable.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;具体原因：设置 app 的状态栏样式的使用了旧的方法。
之前需要兼容iOS7，iOS8。会在 info.plist 里面的 View controller-based status bar appearance （默认会为 YES）设置为NO，如果不设置的话默认也是YES。&lt;/p&gt;

&lt;p&gt;可以调用该方法来改变状态栏目的颜色：
&lt;code class=&quot;highlighter-rouge&quot;&gt;[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent];&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;但是到了iOS9就会报错警告，虽然不影响程序运行，但作为强迫症的程序猿，这个警告的存在不能忍啊。为了兼容iOS9，需要做以下修改：
将info.plist 里面的 View controller-based status bar appearance 删除（默认为 YES），或设置为YES。同时需要使用新的方法来设置状态栏目的颜色：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (UIStatusBarStyle)preferredStatusBarStyle;
- (UIViewController *)childViewControllerForStatusBarStyle;
- (void)setNeedsStatusBarAppearanceUpdate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;1：如果我们的rootViewController是ViewController那么只需要在VC中实现以下方法(clean 下或者删除应用程序重新运行)：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//设置状态栏的白色
 -(UIStatusBarStyle)preferredStatusBarStyle
{
    return UIStatusBarStyleLightContent;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;2：如果我们的rootViewController是navigationController，按照上边的方法设置你会发现是无法解决问题的。
我们必须设置 rootViewController，编译器才会去 rootViewController 中重载 preferredStatusBarStyle 方法。此时我们的 rootViewController是当前的navigationController
在appdelegate里面我们对rootViewController做一下设置：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;self.window.rootViewController = self.navigationController;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;在对应的VC里我们需要做以下设置：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;self.navigationController.navigationBar.barStyle = UIBarStyleBlack;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;对于navigationController状态栏颜色的修改，我们也可以重新写一个navigationController的分类来实现preferredStatusBarStyle方法的调用。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//.h文件
//  UINavigationController+StatusBarStyle.h
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#import
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UINavigationController&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StatusBarStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// .m文件
//  UINavigationController+StatusBarStyle.m
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#import &quot;UINavigationController+StatusBarStyle.h&quot;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UINavigationController&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StatusBarStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIStatusBarStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;preferredStatusBarStyle&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//also you may add any fancy condition-based code here
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIStatusBarStyleLightContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;通过这个分类就可以自定义我们的状态栏的颜色了。&lt;/p&gt;

&lt;p&gt;3：还有就是在初始化登录注册界面时，一些button的背景图没有使用切图。通过颜色值来绘制一张纯色的背景图片。在编译运行时出现一下错误：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Error&amp;gt;: CGContextSetStrokeColorWithColor: invalid context 0x0. If you want to see the backtrace, please set CG_CONTEXT_SHOW_BACKTRACE environmental variable.
&amp;lt;Error&amp;gt;: CGContextSetFillColorWithColor: invalid context 0x0. If you want to see the backtrace, please set CG_CONTEXT_SHOW_BACKTRACE environmental variable.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;具体绘图的方法：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#pragma mark - uicolor - uiimage
- (UIImage*) createImageWithColor:(UIColor*) color rect:(CGRect)rect{
    UIGraphicsBeginImageContext(rect.size);
    CGContextRef context = UIGraphicsGetCurrentContext();
    CGContextSetFillColorWithColor(context, [color CGColor]);
    CGContextFillRect(context, rect);
    UIImage *theImage = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    return theImage;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;根据返回的错误问题，可以认为是在初始化的时候有问题。检索了一下类似的问题，得到如下回复：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;**若使用uikit绘图，只能在drawRect：方法中获取相应的contextRef并绘图。如果在其他方法中获取将获取到一个invalidate 的ref并且不能用于画图。
使用UiKit，你只能在当前上下文中绘图，所以如果你当前处于UIGraphicsBeginImageContextWithOptions函数或drawRect：方法中，你就可以直接使用UIKit提供的方法进行绘图。
如果你持有一个context：参数，那么使用UIKit提供的方法之前，必须将该上下文参数转化为当前上下文。
幸运的是，调用UIGraphicsPushContext 函数可以方便的将context：参数转化为当前上下文，记住最后别忘了调用UIGraphicsPopContext函数恢复上下文环境。**
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;**使用Core Graphics之前需要指定一个用于绘图的图形上下文（CGContextRef），这个图形上下文会在每个绘图函数中都会被用到。
如果你持有一个图形上下文context：参数，那么你等同于有了一个图形上下文，这个上下文也许就是你需要用来绘图的那个。
如果你当前处于UIGraphicsBeginImageContextWithOptions函数或drawRect：方法中，并没有引用一个上下文。为了使用Core Graphics，你可以调用UIGraphicsGetCurrentContext函数获得当前的图形上下文。**
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;最后在登陆注册界面，按键的背景色使用了切图。其他地方按键的背景色使用了绘制的方法，统一主题色调，方便修改。&lt;/p&gt;

</description>
        <pubDate>Mon, 28 Nov 2016 09:32:38 +0800</pubDate>
        <link>https://hnxyzhw.github.io/2016/11/%E9%80%82%E9%85%8DiOS%E7%8A%B6%E6%80%81%E6%A0%8F%E9%A2%9C%E8%89%B2/</link>
        <guid isPermaLink="true">https://hnxyzhw.github.io/2016/11/%E9%80%82%E9%85%8DiOS%E7%8A%B6%E6%80%81%E6%A0%8F%E9%A2%9C%E8%89%B2/</guid>
        
        
      </item>
    
      <item>
        <title>app审核中遇到的问题02（应用内虚拟金币购买应用内商品被拒）</title>
        <description>&lt;p&gt;2016年11月24日 上午11:50
发件人 Apple
	•	3. 1.1 BUSINESS: PAYMENTS - IN-APP PURCHASE 
Business - 3.1.1&lt;/p&gt;

&lt;p&gt;We noticed that your app enables the purchase of content, services, or functionality in the app by means other than the In-App Purchase API, which is not allowed on the App Store.&lt;/p&gt;

&lt;p&gt;Next Steps&lt;/p&gt;

&lt;p&gt;While the payment system that you have included may conduct the transaction outside of the app, if the purchasable content, functionality, or services are intended to be used in the app, they must be purchased through IAP, within the app - unless it is of the type referenced in Guideline 3.1.3.&lt;/p&gt;

&lt;p&gt;In-App Purchase&lt;/p&gt;

&lt;p&gt;It may be appropriate to revise your app to use the In-App Purchase API to provide content purchasing functionality.&lt;/p&gt;

&lt;p&gt;In-App Purchase provides several benefits, including:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The flexibility to support a variety of business models.&lt;/li&gt;
  &lt;li&gt;Impacting your app ranking by consolidating your sales to one app rather than distributing them across multiple apps.&lt;/li&gt;
  &lt;li&gt;An effective marketing vehicle to drive additional sales of new content.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For information on In-App Purchase, please refer to the following documentation:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/in-app-purchase/&quot;&gt;In-App Purchase for Developers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Introduction.html&quot;&gt;In-App Purchase Programming Guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For step-by-step instructions on In-App Purchase creation within iTunes Connect, refer to &lt;a href=&quot;https://developer.apple.com/in-app-purchase/&quot;&gt;In-App Purchase for Developers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://a1813.phobos.apple.com/us/r30/Purple71/v4/e9/a1/09/e9a1095f-bff6-23fc-af75-4c8be7b4885f/attachment-8754101452909378077Screenshot_1123_194831.png?downloadKey3=1484756730_08a42874f2c5dc2c42e9435761bd7bfa&quot;&gt;Screenshot 1123 194831.png&lt;/a&gt; 
&lt;a href=&quot;http://a1882.phobos.apple.com/us/r30/Purple71/v4/df/25/8a/df258a1e-a374-0ff2-2683-8c59fd1dfb7d/attachment-5903931363629314691Screenshot_1123_194844.png?downloadKey3=1484756730_3b147b756adf287544f2fc95e4c287d6&quot;&gt;Screenshot 1123 194844.png&lt;/a&gt; 
&lt;a href=&quot;http://a1255.phobos.apple.com/us/r30/Purple71/v4/79/08/a4/7908a467-56c5-e8bc-e12f-f1d435f022f1/attachment-773458648075770258Screenshot_1123_194819.png?downloadKey3=1484756730_1fbbf8998892d11b2026410e411f88ea&quot;&gt;Screenshot 1123 194819.png&lt;/a&gt; 
&lt;a href=&quot;http://a873.phobos.apple.com/us/r30/Purple71/v4/6d/03/16/6d031677-eb84-958b-bb3f-ad0e9efdc6ab/attachment-2204651524833162591Screenshot_1123_194837.png?downloadKey3=1484756730_1aa8c991be6c97e3305001247bec278d&quot;&gt;Screenshot 1123 194837.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;个人理解：
对用应用内有虚拟货币交易类型的app，是必须要走苹果内购进行充值，支付的。不然的话是不给审核通过的。（提醒：对于那些想通过后台开关控制交易充值的显示的，如果被审查到会被下架，严重的可能账号都被封掉）&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Nov 2016 10:50:00 +0800</pubDate>
        <link>https://hnxyzhw.github.io/2016/11/app%E5%AE%A1%E6%A0%B8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%9802(%E5%BA%94%E7%94%A8%E5%86%85%E8%99%9A%E6%8B%9F%E9%87%91%E5%B8%81%E8%B4%AD%E4%B9%B0%E5%BA%94%E7%94%A8%E5%86%85%E5%95%86%E5%93%81%E8%A2%AB%E6%8B%92)/</link>
        <guid isPermaLink="true">https://hnxyzhw.github.io/2016/11/app%E5%AE%A1%E6%A0%B8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%9802(%E5%BA%94%E7%94%A8%E5%86%85%E8%99%9A%E6%8B%9F%E9%87%91%E5%B8%81%E8%B4%AD%E4%B9%B0%E5%BA%94%E7%94%A8%E5%86%85%E5%95%86%E5%93%81%E8%A2%AB%E6%8B%92)/</guid>
        
        <category>iOS,AppleStore</category>
        
        
      </item>
    
      <item>
        <title>app审核中遇到的问题01（关键字被拒）</title>
        <description>&lt;p&gt;2016年11月24日 上午8:07
发件人 Apple&lt;/p&gt;

&lt;p&gt;2.3 PERFORMANCE: ACCURATE METADATA&lt;/p&gt;

&lt;p&gt;Performance - 2.3.7&lt;/p&gt;

&lt;p&gt;Your app name to be displayed on the App Store includes keywords or descriptors, which are not appropriate for use in an app name.&lt;/p&gt;

&lt;p&gt;Specifically, the following words in your app name are considered keywords or descriptors:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“信贷经理的贷款、办信用卡、公积金、花呗、学生贷抢单神器”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next Steps&lt;/p&gt;

&lt;p&gt;Please revise your app name to remove any keywords and descriptors from all localizations of your app. Keywords can be entered in the Keywords field in iTunes Connect to be used as search terms for your app.&lt;/p&gt;

&lt;p&gt;Resources&lt;/p&gt;

&lt;p&gt;For information on how to revise your app name, please see &lt;a href=&quot;http://help.apple.com/xcode/mac/8.2/#/dev3db3afe4f&quot;&gt;Renaming a Project or App&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For information on changing the app name and other metadata in iTunes Connect, please see the section “Viewing and Changing Your App’s Metadata” in the &lt;a href=&quot;https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/About.html&quot;&gt;iTunes Connect Developer Guide&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Nov 2016 07:07:00 +0800</pubDate>
        <link>https://hnxyzhw.github.io/2016/11/app%E5%AE%A1%E6%A0%B8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%9801(%E5%85%B3%E9%94%AE%E5%AD%97%E8%A2%AB%E6%8B%92)/</link>
        <guid isPermaLink="true">https://hnxyzhw.github.io/2016/11/app%E5%AE%A1%E6%A0%B8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%9801(%E5%85%B3%E9%94%AE%E5%AD%97%E8%A2%AB%E6%8B%92)/</guid>
        
        <category>iOS,AppleStore</category>
        
        
      </item>
    
      <item>
        <title>iOS自定义debug模式下的NSLog宏输出</title>
        <description>&lt;p&gt;在debug模式下的时候需要把所在的类名、方法名、行数等相关信息也打印出来，这样在开发的时候就可以快速定位调试的位置，以及当前的调试信息。对于解决bug来说，这是一个非常有效率的方法。
同时在发布模式下，我们可以不输出打印这些数据，不会造成冗余数据的产生。&lt;/p&gt;

&lt;p&gt;先介绍一些参数：
（1) &lt;code class=&quot;highlighter-rouge&quot;&gt;__VA_ARGS__&lt;/code&gt;是一个可变参数的宏，很少人知道这个宏，这个可变参数的宏是新的C99规范中新增的，目前似乎只有gcc支持（VC6.0的编译器不支持）。宏前面加上##的作用在于，当可变参数的个数为0时，这里的##起到把前面多余的”,”去掉的作用,否则会编译出错, 你可以试试。
（2)&lt;code class=&quot;highlighter-rouge&quot;&gt; __FILE__&lt;/code&gt;宏在预编译时会替换成当前的源文件名。
（3)&lt;code class=&quot;highlighter-rouge&quot;&gt;__LINE__&lt;/code&gt;宏在预编译时会替换成当前的行号。
（4)&lt;code class=&quot;highlighter-rouge&quot;&gt; __FUNCTION__&lt;/code&gt;宏在预编译时会替换成当前的函数名称。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;最简单的一个例子：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#ifdef DEBUG
  #define MYLog(fmt, ...) NSLog((fmt), ##__VA_ARGS__);
  #else
  #define MYLog(...);
  #endif
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;输出当前方法名&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#define MYMethod(...) NSLog(@&quot;%s&quot;, __func__);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;整理&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#ifdef DEBUG
  #define DLog(fmt, ...) NSLog((@&quot;[文件名:%s]\n&quot; &quot;[函数名:%s]\n&quot; &quot;[行号:%d] \n&quot; fmt), __FILE__, __FUNCTION__, __LINE__, ##__VA_ARGS__);
  #define DeBugLog(fmt, ...) NSLog((@&quot;%s [Line %d] &quot; fmt), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__);
  #define NSLog(...) NSLog(__VA_ARGS__);
  #define MyNSLog(FORMAT, ...) fprintf(stderr,&quot;[%s]:[line %d行] %s\n&quot;,[[[NSString stringWithUTF8String:__FILE__] lastPathComponent] UTF8String], __LINE__, [[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] UTF8String]);
  #else
  #define DLog(...)
  #define DeBugLog(...)
  #define NSLog(...)
  #define MyNSLog(FORMAT, ...) nil
  #endif

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Fri, 18 Nov 2016 08:52:35 +0800</pubDate>
        <link>https://hnxyzhw.github.io/2016/11/iOS%E8%87%AA%E5%AE%9A%E4%B9%89debug%E6%A8%A1%E5%BC%8F%E4%B8%8B%E7%9A%84NSLog%E5%AE%8F%E8%BE%93%E5%87%BA/</link>
        <guid isPermaLink="true">https://hnxyzhw.github.io/2016/11/iOS%E8%87%AA%E5%AE%9A%E4%B9%89debug%E6%A8%A1%E5%BC%8F%E4%B8%8B%E7%9A%84NSLog%E5%AE%8F%E8%BE%93%E5%87%BA/</guid>
        
        
      </item>
    
      <item>
        <title>title和leftBarButtonItem不显示</title>
        <description>&lt;p&gt;之前自定义了navigationBar的背景颜色，升级到iOS10后，发现title,跟leftBarButtonItem不显示。
iOS9 之前的navigationBar的背景是_UINavigationBarBackground，到iOS变成了_UIBarBackground，可以通过xcode查看一下相应的布局。我的解决办法是，分别判断iOS10，iOS9的版本，找到对应的背景图，将起隐藏掉，可以消除分割线。然后重新创建一个视图层，颜色可以自定义，需要注意在添加视图或者更新视图时要放到主线程里，同时这个方法需要在viewWillAppear里调用。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#define isIOS9 ([[UIDevice currentDevice].systemVersion intValue]&amp;gt;=9?YES:NO)
#define isIOS10 ([[UIDevice currentDevice].systemVersion intValue]&amp;gt;=10?YES:NO)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#pragma mark - 动态修改状态栏跟顶部导航栏的颜色
-(void)changeNavigationBarBackgroundColor:(UIColor *)barBackgroundColor{
    if ([self.navigationController.navigationBar respondsToSelector:@selector(setBackgroundImage:forBarMetrics:)]){
        NSArray *subviews =self.navigationController.navigationBar.subviews;
        for (id viewObj in subviews) {
            if (isIOS10) {
                //iOS10,改变了状态栏的类为_UIBarBackground
                NSString *classStr = [NSString stringWithUTF8String:object_getClassName(viewObj)];
                if ([classStr isEqualToString:@&quot;_UIBarBackground&quot;]) {
                    UIImageView *imageView=(UIImageView *)viewObj;
                    imageView.hidden=YES;
                }
            }else{
                //iOS9以及iOS9之前使用的是_UINavigationBarBackground
                NSString *classStr = [NSString stringWithUTF8String:object_getClassName(viewObj)];
                if ([classStr isEqualToString:@&quot;_UINavigationBarBackground&quot;]) {
                    UIImageView *imageView=(UIImageView *)viewObj;
                    imageView.hidden=YES;
                }
            }
        }
        UIImageView *imageView = [self.navigationController.navigationBar viewWithTag:111];
        if (!imageView) {
            imageView=[[UIImageView alloc] initWithFrame:CGRectMake(0, -20, self.view.width, 64)];
            imageView.tag = 111;
            [imageView setBackgroundColor:barBackgroundColor];
            dispatch_async(dispatch_get_main_queue(), ^{
                [self.navigationController.navigationBar insertSubview:imageView atIndex:0];
            });
        }else{
            [imageView setBackgroundColor:barBackgroundColor];
            dispatch_async(dispatch_get_main_queue(), ^{
                [self.navigationController.navigationBar sendSubviewToBack:imageView];
            });
            
        }
        
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 19 Sep 2016 18:41:07 +0800</pubDate>
        <link>https://hnxyzhw.github.io/2016/09/iOS10-title%E5%92%8CleftBarButtonItem%E4%B8%8D%E6%98%BE%E7%A4%BA/</link>
        <guid isPermaLink="true">https://hnxyzhw.github.io/2016/09/iOS10-title%E5%92%8CleftBarButtonItem%E4%B8%8D%E6%98%BE%E7%A4%BA/</guid>
        
        
      </item>
    
      <item>
        <title>iOS中NSString的strong、copy的使用</title>
        <description>&lt;p&gt;       iOS开发中关于内存的管理有两种，一种是基于ARC(Automatic Reference Counting)环境下的，另一种是MRC(Mannul Reference Counting)。这两种模式可以在工程中的Build Settings选项下设置，可参照下图所示：
&lt;strong&gt;**
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-f796e399a5cc4ca9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;ARC/MRC.png&quot; /&gt;
       说明：设置为Yes是ARC环境下，设置为NO是MRC环境下。
**&lt;/strong&gt;
       进入正题，我们在声明一个NSString类型的属性时，会遇到这样的一个问题。就是应该使用strong呢？还是应该用copy呢？下面我们通过具体的代码来分析一下两者的区别跟用法。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;操作：&lt;/strong&gt;
       首先我们先声明两个不同的字符串属性，用来做比对，代码如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ViewController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theStrongStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//strong 字符串
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theCopyStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;//copy 字符串
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;       theStrongStr的内存特性是strong，theCopyStr的内存特性是copy，以便我们区分。
&lt;em&gt;**&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;       创建下面两个方法testString，testMutabelString：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-(void)testString{
    NSLog(@&quot;-------------NString--------------&quot;);
    //创建一个不可变源字符串
    NSString *originStr = @&quot;iOS&quot;;
    //初始化strong字符串
    self.theStrongStr = originStr;
    //初始化copy字符串
    self.theCopyStr = originStr;
    
    //打印字符串指向的地址,已经对应的内存地址
    NSLog(@&quot;the origin string:%p, %p&quot;,originStr,&amp;amp;originStr);
    
    NSLog(@&quot;the strong string:%p, %p&quot;,_theStrongStr,&amp;amp;_theStrongStr);
    
    NSLog(@&quot;the copy string:%p, %p&quot;,_theCopyStr,&amp;amp;_theCopyStr);
    
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-(void)testMutabelString{
    NSLog(@&quot;-------------NSMutableString--------------&quot;);
    //创建一个可变源字符串
    NSMutableString *originStr = [NSMutableString stringWithFormat:@&quot;iOS&quot;];
    //初始化strong字符串
    self.theStrongStr = originStr;
    //初始化copy字符串
    self.theCopyStr = originStr;
    
    //打印字符串指向的地址,已经对应的内存地址
    NSLog(@&quot;the origin string:%p, %p&quot;,originStr,&amp;amp;originStr);
    
    NSLog(@&quot;the strong string:%p, %p&quot;,_theStrongStr,&amp;amp;_theStrongStr);
    
    NSLog(@&quot;the copy string:%p, %p&quot;,_theCopyStr,&amp;amp;_theCopyStr);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;       在viewDidLoad里调用这个两个方法：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (void)viewDidLoad {
    [super viewDidLoad];
    [self testString];
    [self testMutabelString];
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;       运行看到输出的结果如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iOSCopyAndStrong[1076:1312388] -------------NString--------------
iOSCopyAndStrong[1076:1312388] the origin string:0x109eff098, 0x7fff55d00958
iOSCopyAndStrong[1076:1312388] the strong string:0x109eff098, 0x7fb0a2c55050
iOSCopyAndStrong[1076:1312388] the copy string:0x109eff098, 0x7fb0a2c55058
iOSCopyAndStrong[1076:1312388] -------------NSMutableString--------------
iOSCopyAndStrong[1076:1312388] the origin string:0x7fb0a2f79d50, 0x7fff55d00958
iOSCopyAndStrong[1076:1312388] the strong string:0x7fb0a2f79d50, 0x7fb0a2c55050
iOSCopyAndStrong[1076:1312388] the copy string:0xa00000000534f693, 0x7fb0a2c55058

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;testString：&lt;/strong&gt;
       在testString方法里我们使用的原字符串string是一个不可变的字符串。在这种情况下，我的可以看到我们创建的strong特性的对象，跟copy特性的对象,它们所指向的地址都是同一个地址&lt;code class=&quot;highlighter-rouge&quot;&gt;0x109eff098&lt;/code&gt;，也就是我们使用的不可变字符串&lt;code class=&quot;highlighter-rouge&quot;&gt;NSString *originStr = @&quot;iOS&quot;;&lt;/code&gt;它所指向的地址。我们可以开启MRC模式，打断点调试，查看当前定义这个不可变字符串originStr的引用计数，可以发现执行完操作后&lt;code class=&quot;highlighter-rouge&quot;&gt;self.theStrongStr = originStr;self.theCopyStr = originStr;&lt;/code&gt;，originStr的引用计数发生了改变1-&amp;gt;3。每次执行都使原来的字符串originStr对象的引用计数+1。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;testMutabelString：&lt;/strong&gt;
       在testMutabelString方法里面我们使用的原字符串string是一个可变的字符串&lt;code class=&quot;highlighter-rouge&quot;&gt;NSMutableString *originStr = [NSMutableString stringWithFormat:@&quot;iOS&quot;];&lt;/code&gt;。可以看到输出结果，使用strong特性的对象仍然指向原字符串originStr的地址，而使用copy特性的对象，所指向的是一个新的地址。其实就是copy特性的对象对原字符串originStr进行了深考贝，并指向了这个这个新的地址。我们开启MRC模式，打断点调试，查看到在执行操作后，originStr对象的引用计数1-&amp;gt;2，而_theCopyStr对象的引用计数为1。这也就验证copy创建了一个新对象的说法。
       在testMutabelString方法中，不管我们如何修改originStr字符串，_theStrongStr所指向的地址也是跟着originStr字符串指向的地址变动的，这也就证明了_theStrongStr的类型实际上是可变类型NSMutableString，而不是NSString。同理_theCopyStr是指向一个新创建的对象，是不可以改变的。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;归纳总结：&lt;/strong&gt;
             当原字符串是NSString类型时，由于它是不可变类型的，不管是使用strong特性，还是copy特性的对象，它们所指向的地址都跟原字符串是一样的，都指向原字符串对象。也就是说当原字符串是NSString类型时，copy特性的操作，只是做了一次浅拷贝，只是增加了指针指向原字符串所指向的地址。&lt;/p&gt;

&lt;p&gt;       当原字符串是NSMutableString类型时，strong特性对象只是增加了原字符串的引用计数，但是copy特性对象则是对原字符串进行了深拷贝，创建了一个新对象，并且指向了这个新对象。此时，copy特性对象是NSString类型的不可变的,strong特性对象是NSMutableString类型的可变的。&lt;/p&gt;

&lt;p&gt;       关于在声明NSString属性时，我们是要选择strong特性，还是选择copy特性，是需要通过开发过程中的实际情况来选择的。但是我们在大多数情况下，在生命NSString属性时，都是希望其不被改变，防止数据出错。所以大多数情况下还是选择copy特性，从而来避免一些无法预估的bug。在补充一下，当原字符串是NSMutableString类型，也就是可变类型的时候，strong特性操作只是增加了原字符串的引用计数，而copy特性操作则是进行深拷贝，所以在copy会耗费更多的内存资源跟性能。而对NSString类型不可变的，就不会有这种问题，但是基于现在这么强大的手机处理器性能，这些应该也不是什么大问题。&lt;/p&gt;

</description>
        <pubDate>Tue, 30 Aug 2016 15:15:34 +0800</pubDate>
        <link>https://hnxyzhw.github.io/2016/08/iOS%E4%B8%ADNSString%E7%9A%84strong-copy%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
        <guid isPermaLink="true">https://hnxyzhw.github.io/2016/08/iOS%E4%B8%ADNSString%E7%9A%84strong-copy%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
        
        
      </item>
    
      <item>
        <title>简单排序算法(OC实现)</title>
        <description>&lt;p&gt;排序的目的，就是使一串记录，按照其中的某个或某些关键字的大小，递增或递减的排列起来的操作。排序算法，就是如何使得记录按照要求排列的方法。我们子啊开发过程，从后台拿到的数据有可能是无序列，这就要我们运用一些排序算法，对这些数据进行二次排序。
&lt;strong&gt;**
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-45e7bbfe2ca31998.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;截图1.png&quot; /&gt;
**&lt;/strong&gt;
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-7441b514575a3484.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;截图2.png&quot; /&gt;
&lt;strong&gt;**
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-c9e99cffcee7cd66.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;截图3.png&quot; /&gt;
**&lt;/strong&gt;
下面就介绍三种简单排序：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//属性
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ViewController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UIButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selectSortBtn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//选择排序
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UIButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;insertSortBtn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//插入排序
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UIButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shellSortBtn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//希尔排序
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UITextView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resultTextView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//排序过程
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UITextView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;methodDesTextView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//算法简单描述
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//用于保存运算次数
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UIButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;calculateCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//计算次数
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;1：选择排序算法
选择排序算法就是每一次从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完。这种算法不会因为数据源是否是有序数组而改变排序计算次数。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//
- (IBAction)selectSort:(UIButton *)sender {
    //排序算法思路
     _count = 0;
    [_calculateCount setTitle:@&quot;交换次数&quot; forState:UIControlStateNormal];
    self.resultTextView.text = @&quot;排序结果:&quot;;
    self.methodDesTextView.text = @&quot;算法简介:\n关键点是拿到当前数组的最小的元素跟剩下的元素依次比较\n拿到首个元素，将这个元素的值作为首次遍历时的数组元素的最小值，它的下标记作最小元素的下标\n然后开始从0遍历整个数组，这个最小值跟数组里面的所有值进行比较\n如果在遍历过程中有数组元素的值有比当前记录的最小值,那么就需要变更之前记录的最小值，以及最小值元素的下标\n然后讲当前遍历的首个元素跟记录的最小元素，交换一下位置，如此反复就可以达到排序的效果\n特点：不会因是否有序数组而改变排序计算次数&quot;;
    NSArray *array = @[@(13),@(5),@(9),@(12),@(10),@(4),@(1),@(7)];//无序
//    NSArray *array =@[@(1),@(5),@(9),@(12),@(10),@(4),@(7),@(13)];//部分有序
    array = [self selectSort:[array mutableCopy] withStartIndex:0];
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-(NSMutableArray *)selectSort:(NSMutableArray *)array withStartIndex:(int)start{
    if (start == array.count) {
        return array;
    }
    int minVale = [array[start] intValue];
    int minIndex = start;
    for (int index = start; index &amp;lt; array.count; index++) {
        if (minVale &amp;gt; [array[index] intValue]) {
            minVale = [array[index] intValue];
            minIndex = index;
            _count ++;
        }
    }
    [array exchangeObjectAtIndex:start withObjectAtIndex:minIndex];
    self.resultTextView.text = [self.resultTextView.text stringByAppendingString:[NSString stringWithFormat:@&quot;\nstart:%d--end:%ld--count:%.f:%@&quot;,start,array.count,_count,array]];
    array = [self selectSort:array withStartIndex:start + 1];
    return array;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2：插入排序算法
插入算法把要排序的数组分成两部分：第一部分包含了这个数组的所有元素，但将最后一个元素除外（让数组多一个空间才有插入的位置），而第二部分就只包含这一个元素（即待插入元素）。在第一部分排序完成后，再将这个最后元素插入到已排好序的第一部分中。
对于有序数组或部分有序数组，此排序方法是十分高效的。若果最小的元素都在最后部分的位置，那么该排序方法就会变得非常费劲了。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (IBAction)insertSort:(UIButton *)sender {
     _count = 0;
    [_calculateCount setTitle:@&quot;交换次数&quot; forState:UIControlStateNormal];
    self.resultTextView.text = @&quot;排序结果:&quot;;
    self.methodDesTextView.text = @&quot;算法简介:\n始终定义第一个元素为有序的，将元素逐个插入到有序排列之中\n其特点是要不断的移动数据，空出一个适当的位置，把待插入的元素放到里面去\n特点：对于有序数组或部分有序数组，此排序方法是十分高效的\n若果最小的元素都在最后部分的位置，那么该排序方法就会变得非常费劲了&quot;;
    NSArray *array =@[@(13),@(5),@(9),@(12),@(10),@(4),@(1),@(7)];//无序
//    NSArray *array =@[@(1),@(5),@(9),@(12),@(10),@(4),@(7),@(13)];//部分有序
    array = [self insertSortArray:[array mutableCopy]];
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-(NSMutableArray *)insertSortArray:(NSMutableArray *)array{
    for (int i = 1; i &amp;lt; array.count; i ++) {
        int temp = [array[i] intValue];
        int j = i;
        for (; j &amp;gt; 0 &amp;amp;&amp;amp; temp &amp;lt; [array[j -1] intValue]; j --) {
            array[j] =  array[j - 1];
            _count ++;
            
        }
        array[j] = @(temp);
        self.resultTextView.text = [self.resultTextView.text stringByAppendingString:[NSString stringWithFormat:@&quot;\nstart-%d--count:%.f:%@&quot;,i,_count,array]];  
    }
    return array;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3：希尔排序算法
希尔排序是把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减少，每组包含的关键词越来越多，当增量减至1时，整个文件恰被分成一组，算法便终止。
希尔排序是直接插入排序算法的一种更高效的改进版本，性能上比选择排序和插入排序快得多,中等大小规模表现良好，对规模非常大的数据排序不是最优选择。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (IBAction)shellSort:(UIButton *)sender {
    _count = 0;
    [_calculateCount setTitle:@&quot;交换次数&quot; forState:UIControlStateNormal];
    self.resultTextView.text = @&quot;排序结果:&quot;;
    self.methodDesTextView.text = @&quot;算法简介:\n希尔排序是直接插入排序算法的一种更高效的改进版本\n使数组中任意间隔为N的元素都是有序的,这样的数组为N有序数组。N有序数组可以看作是N个小的有序数组所构成的一个数组\n记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减少，每组包含的关键词越来越多，当增量减至1时，整个文件恰被分成一组，算法便终止\n特点：性能上比选择排序和插入排序快得多,中等大小规模表现良好，对规模非常大的数据排序不是最优选择&quot;;
    NSArray *array =@[@(13),@(5),@(9),@(12),@(10),@(4),@(1),@(7)];//无序
//    NSArray *array =@[@(1),@(5),@(9),@(12),@(10),@(4),@(7),@(13)];//部分有序
    [self shellSortArray:[array mutableCopy] withGapH:(int)array.count/2];
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-(NSMutableArray *)shellSortArray:(NSMutableArray *)array withGapH:(int)gapH {
    
    if (gapH &amp;lt; 1 ) {
       return array;
    }else{
        for (int i = gapH; i &amp;lt; (int)array.count; i++ ) {
            int temp = [array[i] intValue];
            int j = i;
            while (j &amp;gt;= gapH &amp;amp;&amp;amp; temp &amp;lt; [array[j - gapH] intValue]) {
                [self exchangeArray:array withNIndex:j andMIndex:j - gapH];
                j -= gapH;
                _count ++;
            }
            array[j] = @(temp);
            
        }
        self.resultTextView.text = [self.resultTextView.text stringByAppendingString:[NSString stringWithFormat:@&quot;\nsortgapH-%d--count:%.f:%@&quot;,gapH,_count,array]];
        gapH = gapH/2;
        [self shellSortArray:array withGapH:gapH];
    }
    
    return array;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//交换两个元素
-(void)exchangeArray:(NSMutableArray *)array withNIndex:(int)n andMIndex:(int)m{
    int temp = [array[n] intValue];
    array[n] = array[m];
    array[m] = @(temp);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;本文示例demo链接：&lt;a href=&quot;https://github.com/hnxyzhw/OC_SortingAlgorithm.git&quot;&gt;OC_SortingAlgorithm&lt;/a&gt;
其实还有很多排序算法没有总结，像冒泡排序算法，快速排序算法，堆排序算法，归并排序算法，计数排序算法，桶排序算法，基数排序算法等等。以后也会花一些时间研究一下这些排序算法，给自己多充点电。&lt;/p&gt;

</description>
        <pubDate>Thu, 11 Aug 2016 09:32:04 +0800</pubDate>
        <link>https://hnxyzhw.github.io/2016/08/%E7%AE%80%E5%8D%95%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95(OC%E5%AE%9E%E7%8E%B0)/</link>
        <guid isPermaLink="true">https://hnxyzhw.github.io/2016/08/%E7%AE%80%E5%8D%95%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95(OC%E5%AE%9E%E7%8E%B0)/</guid>
        
        
      </item>
    
      <item>
        <title>ios8-横屏状态栏不显示解决方法</title>
        <description>&lt;p&gt;开发过程中发现ios8下横屏状态栏不显示&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-885acfc974603966.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;竖屏显示状态栏.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-0f9efa98d75551ef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;横屏不显示状态栏.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Tips：解决这个问题，需要我们按照以下步骤操作
1：在plist文件中将 View controller-based status bar appearance 设置为NO&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-08640aa43afb2545.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;plist文件.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;2：还需要application:didFinishLaunchingWithOptions:中添加以下下面代码(下面的两段代码必不可少)
&lt;em&gt;**&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/683658-483d2a7c2217e8fd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;代码调用.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[[UIApplication sharedApplication] setStatusBarHidden:YES withAnimation:UIStatusBarAnimationNone];
[[UIApplication sharedApplication] setStatusBarHidden:NO withAnimation:UIStatusBarAnimationNone]; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 08 Aug 2016 11:40:37 +0800</pubDate>
        <link>https://hnxyzhw.github.io/2016/08/ios8-%E6%A8%AA%E5%B1%8F%E7%8A%B6%E6%80%81%E6%A0%8F%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link>
        <guid isPermaLink="true">https://hnxyzhw.github.io/2016/08/ios8-%E6%A8%AA%E5%B1%8F%E7%8A%B6%E6%80%81%E6%A0%8F%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid>
        
        
      </item>
    
  </channel>
</rss>
